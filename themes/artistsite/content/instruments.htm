<div>
	Software-Based Musical Instruments
</div>
<div>
	In 2017 I wrote a research thesis on <i>Interface Mapping Techniques</i> for software based musical instruments. You can read it <a href="./assets/cts_pushtouchtwist.pdf">here</a>.
	<br>
	I've built these musical instruments:
	<br>
	<ul style="margin-left: 10%;">
		<li><i>The Sextone</i> Polyphonic Harmonizer (SuperCollider)</li>
		<li><i>Electric Sheep Textural Synthesizer</i> (Max Patch)</li>
		<li>MIDI Foot Pedal</li>
	</ul>
	Some really fascinating resources on digital instrument design:
	<ul style="margin-left: 10%">
		<li>Sam Pluta: Maximize Information Flow</li>
		<li>Rodrigo Constanzo: PhD Thesis</li>
		<li>Miller Puckette: Design Choices for computer instruments and computer compositional tools</li>
		<li>Monome</li>
		<li>Andy Hunt & Marcelo Wanderley: Mapping performer parameters to synthesis engines</li>
	</ul>
	I have a collection of useful Pure Data and Max patches available on my <a href="{{ navlinks.github }}">github</a>. These include:
	<ul style="margin-left: 10%">
		<li>Buffer Loaders (load an entire folder of audio files into buffers in Max or Pd).</li>
		<li>Rotary Encoder Patches for use with MIDI controllers such as the MIDI Fighter Twister.</li>
		<li>MIDI parsers to integrate the Novation LAUNCH products (launchpad, launchcontrol, launchkey) into Pd patches and use the grid system used in MONOME grids.</li>
	</ul>
</div>
